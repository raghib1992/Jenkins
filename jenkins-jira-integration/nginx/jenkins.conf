# configure upstream
upstream jenkins {
    server localhost:8080;

    # limit the number of idle connections to this upstream
    keepalive 16;
}

server {
    ...
    # standard "redirect-all-to-https" configuration
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name  build.nanogram.io;

    # root directive is not needed here, 
    # since all traffic is redirected to Jenkins and
    # it will be serving static files
    
    # standard long block of SSL configuration is omitted, 
    # check the full file for details 
    ....

    # Jenkins will use custom headers for CSRF protection
    # whithout this directive NGINX will drop those headers
    ignore_invalid_headers off;

    location / {
        proxy_pass http://jenkins;

        # we want to connect to Jenkins via HTTP 1.1 with keep-alive connections
        proxy_http_version 1.1;

        # has to be copied from server block, 
        # since we are defining per-location headers, and in 
        # this case server headers are ignored
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # no Connection header means keep-alive
        proxy_set_header Connection "";

        # Jenkins will use this header to tell if the connection
        # was made via http or https
        proxy_set_header X-Forwarded-Proto $scheme;

        # increase body size (default is 1mb)
        client_max_body_size       10m;

        # increase buffer size, not sure how this impacts Jenkins, but it is recommended
        # by official guide
        client_body_buffer_size    128k;

        # block below is for HTTP CLI commands in Jenkins
        
        # increase timeouts for long-running CLI commands (default is 60s)
        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;

        # disable buffering
        proxy_buffering            off;
        proxy_request_buffering    off; 
    }

    error_page 404 /404.html;
        location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
    }
}
