// import hudson.model.*
// import java.lang.*
// import groovy.lang.Closure
// import java.util.Map

pipeline {
    agent {
        node {
            label 'Window'
        }
    }
    parameters {
        (string (defaultValue: 'dev', name: 'environment'))
    }    
    tools {
        gradle 'gradle-window'
    }
    stages {
        stage ('powershell') {
            steps {
                script {
                    powershell 'Write-Output "Hello, World!"'
                }
            }
        }
        stage ('Git') {
            when {
                expression { params.environment == "dev" }
            }
            steps {
                
                // checkout([$class: 'GitSCM', branches: [[name: '*/raghib']], userRemoteConfigs: [[url: 'https://github.com/raghib1992/CICD_Java_gradle_application.git']]])
                git branch: 'raghib', url: 'https://github.com/raghib1992/CICD_Java_gradle_application.git'
            }
        }
        
        stage ('Build') {
            steps {
                bat 'gradle -version'
                bat 'gradle build'
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }
        
        // stage ('Publish Artifacts') {
        //     steps {
        //         rtUpload (
        //             buildName: JOB_NAME,
        //             buildNumber: BUILD_NUMBER,
        //             serverId: 'Artifactory',
        //             spec: '''{
        //                     "files":[
        //                         {
        //                             "pattern": "build/libs/*.war",
        //                             "target": "raghib-local-repo/",
        //                             "recursive": "false"
        //                         }
        //                     ]
        //             }'''
        //         )
        //     }
        // }
        stage ('Deploy to Artifactory') {
            steps {
                script {
                    def server = Artifactory.newServer url: 'http://3.110.227.79:8081/artifactory/', credentialsId: 'artifactory'
                    
                    def uploadSpec = """{
                        "files": [
                            {
                                "pattern": "**/*.war",
                                "target": "nadim-local/"
                            }
                        ]
                    }"""
                    server.upload spec:uploadSpec
                }
            }
        }
    }
}